@model WebModels.SupportOnline
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}

@using (Html.BeginForm("Edit", "Support", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
     if (ApplicationService.Languages != null)
    {
        <div class="control-group">
            @Html.LabelFor(m => m.Culture, new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().DropDownListFor(m => m.Culture)
                                  .HtmlAttributes(new { style = "width: 150px" })
                                  .DataTextField("Title")
                                  .DataValueField("ID").BindTo(
                                (IEnumerable<WebModels.Language>)ApplicationService.Languages
                                  )
                )
            </div>
        </div>
    }
    
    <div class="control-group">
        @Html.LabelFor(m => m.Title, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Title, new { @class = "input-block-level" })
        </div>
    </div>
 
    <div class="control-group">
        @Html.LabelFor(m => m.Yahoo, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Yahoo, new { @class = "input-block-level" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Skype, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Skype, new { @class = "input-block-level" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Email, new { @class = "input-block-level" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.Phone, new { @class = "input-block-level" })
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Status, new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownListFor(
             m => m.Status,
                new SelectList(new List<SelectListItem>
                    {
                    new SelectListItem{ Text="Phát hành", Value = "1" },
                    new SelectListItem{ Text="Nội bộ", Value = "0" },
                        new SelectListItem{ Text="Khóa", Value = "-1" }

                    }, "Value", "Text")
           )
        </div>
    </div>
            <div class="control-group">
        @Html.LabelFor(m => m.Order, new { @class = "control-label" })
        <div class="controls">
            @(Html.Kendo().NumericTextBoxFor<int>(m => m.Order)
            .Min(0)
            .Max(100) .Format("#")
            )
        </div>
    </div>
    <div class="validation-group">
        <div class="controls">
            @Html.ValidationSummary(true)
        </div>
    </div>

    <div class="form-actions">
        <button class="btn btn-primary" type="submit">@Resources.Common.SaveChanges</button>
    </div>
    @Html.AntiForgeryToken()
}

<script type="text/javascript">
    $(document).ready(function () {
        top.winsetup("@Html.Raw(Resources.Common.EditItem)", 700, 450, true);
    });
    function edit_success() {
        top.winclose();
        top.$("#grid").data("kendoGrid").dataSource.read();
    }

</script>
