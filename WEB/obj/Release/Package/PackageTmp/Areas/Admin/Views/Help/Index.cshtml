@{
     
}

<script src="~/Content/scroll/jquery.mCustomScrollbar.concat.min.js"></script>
<link href="~/Content/scroll/jquery.mCustomScrollbar.css" rel="stylesheet" />

<style type="text/css">
    .box .box-title {
        margin-top: 0px;
    }

    #help-content {
        height: 500px;
        overflow: hidden;
    }
</style>

<div id="main">
    <div id="left">
    </div>
    <div class="container-fluid">
        <div class="page-header">
            <div class="pull-left">
                <div class="breadcrumbs"></div>
            </div>
            <div class="pull-right">
                <ul class="actions">
                    <li>
                        <a href="#" id="btnadd" class="btn btn-mini  btn-blue btn-inverse"><i class="icon-plus"></i> @Resources.Common.Add  </a>
                    </li>
                    <li>
                        <a href="#" id="btnedit" class="btn btn-mini   btn-blue btn-inverse"><i class="icon-edit"></i> @Resources.Common.Edit  </a>
                    </li>
                    <li>
                        <a href="#" id="btndelete" class="btn btn-mini  btn-red btn-inverse"><i class="icon-trash"></i> @Resources.Common.Delete  </a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span4">
                <div class="box">
                    <div class="box-content nopadding">
                        @(Html.Kendo().Grid<Help>()
                            .Name("grid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.Title).Title("Trợ giúp");
                            })
                            .Selectable(select => select.Mode(GridSelectionMode.Multiple))
                            .Sortable()
                            .Filterable()
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model => model.Id(p => p.ID))
                                .PageSize(30)
                                .Read(read => read.Action("Help_Read", "Help"))
                             )
                             .Events(events => events.Change("change_handler").DataBinding("binding_handler"))
                        )
                    </div>
                </div>
            </div>
            <div class="span8">
                <div class="box">
                    <div class="box nopadding">
                        <div class="box box-color  box-small box-bordered">
                            <div class="box-title">
                                <h3>
                                    <i class="icon-th-large"></i>Nội dung
                                </h3>
                                <div class="actions">
                                    <a href="#" title="Sửa" class="btn btn-mini" id="_contentnew_edit"><i class="icon-edit"></i></a>
                                    <a href="#" class="btn btn-mini content-refresh" id="_contentnew_refresh"><i class="icon-refresh"></i></a>
                                    <a href="#" class="btn btn-mini content-slideUp"><i class="icon-angle-down"></i></a>
                                </div>
                            </div>
                            <div id="help-content" class="box-content">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                                               
<script type="text/javascript">
      
    var lastId = null;   
    function bindContent(id) {
        if (id == null) {
            return;
        }       
        lastId = id;     
        $.post("/help/getcontent/"+id, function (result) {
            var help = $("#help-content");     
            help.html(result);   
        })
    }

    var rowselected = [];
    function change_handler(e) {
        bindContent(this.dataItem(this.select()).ID);
        rowselected = [];
        var len = this.select().length;
        for (i = 0; i < len; i++) {
            rowselected.push(this.dataItem(this.select()[i]).ID);
        }
    }

    function binding_handler(e) {
        rowselected = [];
    }

    $(document).ready(function () {
        $("#_contentnew_refresh").click(function () {
            bindContent(lastId);
        });                   
        $("#_contentnew_edit").click(function () {
            if (lastId == null) {
                alert("Không có khoản mục nào được chọn.");    
                return;
            }
            opendlg("/admin/help/edit/" + lastId);
        });

        $("#btnadd").click(function () {
            opendlg("/admin/help/add/");
        });

        $("#btnedit").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/help/edit/" + rowselected[0]);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });

        $("#btndelete").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/help/deletes/" + rowselected);  
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });
    });
</script>