@model IEnumerable<WebModels.WebContent>

@{
    var webmodule = (WebModule)ViewBag.WebModule;
    var parent = (WebModule)ViewBag.WebModuleParent;
    var moduletran = webmodule;

    var background = String.IsNullOrEmpty(webmodule.Image) ? "/content/themes/web/img/bg-title1.png" : webmodule.Image;
    var codecolor = String.IsNullOrEmpty(webmodule.CodeColor) ? "#b200b2" : webmodule.CodeColor;
    var urlcat = webmodule.URL;
    if (string.IsNullOrEmpty(webmodule.URL) || string.IsNullOrWhiteSpace(webmodule.URL))
    {
        urlcat = Url.Action("Index", "Home", new { metatitle = webmodule.MetaTitle != null ? webmodule.MetaTitle : "web", id = webmodule.ID, area = "" });
    }
    TempData["Title"] = Utility.UseStringHasValue(webmodule.SeoTitle, webmodule.Title);
    TempData["Description"] = Utility.UseStringHasValue(webmodule.MetaDescription, webmodule.Description);
    TempData["Keywords"] = Utility.UseStringHasValue(webmodule.MetaKeywords, webmodule.SeoTitle);

    TempData["URL"] = ApplicationService.Domain + urlcat;
    TempData["Cat"] = webmodule.Title;
}

<section class="inner-page-banner" style="background-image: url(@webmodule.Backgroud)">
    <div class="page-banner-caption">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@webmodule.Title</h1>
                    @Html.Action("_SiteMap", "Home", new { area = "" })
                </div>
            </div>
        </div>
    </div>
</section>

<section class="main">
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="intro">
                    <div class="entry-content">
                        @Html.Raw(webmodule.Body)
                    </div>
                </div>
                
                @*INfomation*@
                @Html.Action("_InformationDestination", "WebContentInformation", new { webmoduleId = webmodule.ID, area = "ContentType" })
           
                @Html.Action("_OtherDestination", "WebContentInformation", new { id = webmodule.ID, area = "ContentType" })
                
                
            </div>
        </div>
        <div class="row tours">

            @foreach (var item in Model)
            {
                var img = string.IsNullOrEmpty(item.Image) ? ApplicationService.NoImage : item.Image;
                var urlContent = Url.Action("Detail", "Home", new
                {
                    metatitle = item.MetaTitle != null ? item.MetaTitle : "web",
                    id = item.ID,
                    m_metatitle = item.WebModule.MetaTitle != null ? item.WebModule.MetaTitle : "web",
                    m_id = item.WebModule.ID,
                    area = ""
                });
                
                 <div class="col-md-4 col-lg-4 col-xl-4">
                    <div class="tour-item wow fadeIn" style="visibility: visible; animation-name: fadeIn;">
                        <div class="thumb">
                            <a href="@urlContent" title="@item.Title">
                                <img src="@img" alt="@item.Title" title="@item.Title">
                            </a>
                        </div>
                        <div class="tour-info">
                            <h3><a href="@urlContent" title="@item.Title">@item.Title</a></h3>
                            @if (!string.IsNullOrWhiteSpace(item.Description))
                            {
                                <p> @Html.RawSubString(item.Description, 150)</p>
                            }
                            @*<div class="tour-price">$650.00 <small>- 2 days 3 nights</small></div>*@
                            <div class="tour-location"><a href="@urlContent" title="@item.Title"><span>@Resources.Common.Details</span></a></div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="control-bot" class="control control-bot control-classer">
            @if (ViewBag.TotalItemCount > ApplicationService.PageSizeSmall)
            {
                <div class="pager">
                    @Html.Raw(Html.Pager(
                            new Options
                            {
                                PageSize = ApplicationService.PageSizeSmall,
                                TotalItemCount = ViewBag.TotalItemCount,
                                CurrentPage = ViewBag.CurrentPage,
                                ItemTexts = new ItemTexts() { Next = "", Previous = "" },
                                ItemIcon = new ItemIcon() { First = "fa fa-angle-double-left", Previous = "fa fa-angle-left", Next = "fa fa-angle-right", Last = "fa fa-angle-double-right" },
                                TooltipTitles = new TooltipTitles() { Next = Resources.Common.NextPage, Previous = Resources.Common.PreviousPage },
                                Size = Size.normal,
                                IsShowControls = true,
                                Alignment = Alignment.centered,
                                IsShowFirstLast = false,
                                IsShowPages = true
                            }, new RouteValueDictionary(ViewBag.RouteValues)))
                </div>
            }
        </div>

    </div>
</section>

@*Tourr*@
