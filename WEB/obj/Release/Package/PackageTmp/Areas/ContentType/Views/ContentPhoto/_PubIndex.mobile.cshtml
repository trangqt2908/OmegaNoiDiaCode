@model IEnumerable<WebModels.WebContent>

@{
    var webmodule = (WebModule)ViewBag.WebModule;
    var moduletran = webmodule;
    var codecolor = String.IsNullOrEmpty(webmodule.CodeColor) ? "#b200b2" : webmodule.CodeColor;
    var urlcat = webmodule.URL;
    if (string.IsNullOrEmpty(webmodule.URL) || string.IsNullOrWhiteSpace(webmodule.URL))
    {
        urlcat = Url.Action("Index", "Home", new { metatitle = webmodule.MetaTitle != null ? webmodule.MetaTitle : "web", id = webmodule.ID, area = "" });
    }
    
    TempData["Title"] = Utility.UseStringHasValue(webmodule.SeoTitle, webmodule.Title);
    TempData["Description"] = String.IsNullOrEmpty(webmodule.Description) ? webmodule.Title : webmodule.Description;
    TempData["URL"] = ApplicationService.Domain + urlcat;
    TempData["Cat"] = webmodule.Title;
}
@helper CreateMenubox(IEnumerable<WebModels.WebModule> nodes, string codecolor)
{
    foreach (var node in nodes)
    {
        <li>
            @if (string.IsNullOrEmpty(node.URL) || string.IsNullOrWhiteSpace(node.URL))
            {
                @Html.ActionLink(node.Title, "Index", "Home", new { metatitle = node.MetaTitle != null ? node.MetaTitle : "web", id = node.ID, area = "" }, new { title = node.Title, style = "color:" + codecolor })
            }
            else
            {
                <a href="@node.URL" target="@node.Target" style="color:@codecolor">@node.Title</a>
            }
        </li>
    }
}
<script src="/Content/themes/web/js/jquery.masonry.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var $container = $('.list-photo');
        $container.imagesLoaded(function () {
            $container.masonry({
                itemSelector: '.item',
                isAnimated: true,
                animationOptions: {
                    duration: 300,
                    easing: 'linear',
                    queue: false
                }
            });
        });
    });
</script>

<div class="box-new">
    <ul class="cat">
        <li><a href="@urlcat">@webmodule.Title</a></li>
        @{
            var sub = WEB.Areas.ContentType.Controllers.ArticleController.GetWebModuleByParentID(webmodule.ID);
        }
        @if (sub.Any())
        {
            @CreateMenubox(sub, codecolor);
        }
    </ul>
    <div class="clear-fix"></div>
    <div class="news-cat">
        <div class="list-photo">
            <ul>
                @foreach (var item in Model)
                {
                    var img = item.Image != null ? item.Image : ApplicationService.NoImage;
                    var moduleitem = item.WebModule;
                    var url = Url.Action("Detail", "Home", new
                    {
                        metatitle = item.MetaTitle != null ? item.MetaTitle : "web",
                        id = item.ID,
                        m_metatitle = moduleitem.MetaTitle != null ? moduleitem.MetaTitle : "web",
                        m_id = moduleitem.ID,
                        area = ""
                    });
                    <li class="item">
                        <div class="box-image">
                            <a href="@url">
                                <img src="@img" alt="@item.Title" class="thumb" />
                            </a>
                        </div>
                        <a href="@url"> @item.Title </a>
                    </li>
                }
            </ul>

        </div>
        @if (ViewBag.TotalItemCount > ApplicationService.PageSize)
        {
            <div class="pager">
                @Html.Raw(Html.Pager(
                            new Options
                            {
                                PageSize = ApplicationService.PageSize,
                                TotalItemCount = ViewBag.TotalItemCount,
                                CurrentPage = ViewBag.CurrentPage,
                                ItemTexts = new ItemTexts() { Next = "", Previous = "" },
                                ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                                TooltipTitles = new TooltipTitles() { Next = Resources.Common.NextPage, Previous = Resources.Common.PreviousPage },
                                Size = Size.normal,
                                IsShowControls = true,
                                Alignment = Alignment.centered,
                                IsShowFirstLast = false,
                                IsShowPages = true
                            }, new RouteValueDictionary(ViewBag.RouteValues)))
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>
<style>
    .box-new ul {
        list-style: square;
        color: @codecolor;
    }
    .box-new ul li a {
        color: @codecolor;
    }   
</style>