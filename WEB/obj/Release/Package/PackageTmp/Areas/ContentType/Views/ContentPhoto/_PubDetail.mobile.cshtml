@model WebContent
@{
    var item = Model;
    var webmodule = item.WebModule;
    var background = String.IsNullOrEmpty(webmodule.Image) ? "/content/themes/web/img/bg-title1.png" : webmodule.Image;
    var codecolor = String.IsNullOrEmpty(webmodule.CodeColor) ? "#b200b2" : webmodule.CodeColor;
    var bgColor = WEB.Areas.ContentType.Controllers.ArticleController.GetBGColor(codecolor);
    var urlcat = webmodule.URL;
    if (string.IsNullOrEmpty(webmodule.URL) || string.IsNullOrWhiteSpace(webmodule.URL))
    {
        urlcat = Url.Action("Index", "Home", new { metatitle = webmodule.MetaTitle != null ? webmodule.MetaTitle : "web", area = "" });
    }
    var url = Url.Action("Detail", "Home", new
    {
        metatitle = item.MetaTitle != null ? item.MetaTitle : "web",
        m_metatitle = webmodule.MetaTitle != null ? webmodule.MetaTitle : "web",
        area = ""
    });
    TempData["Title"] = HttpUtility.HtmlDecode(item.Title);
    TempData["Image"] = ApplicationService.Domain + Model.Image;
    TempData["Description"] = String.IsNullOrEmpty(item.Description) ? item.Title : item.Description;
    TempData["URL"] = ApplicationService.Domain + url;
    TempData["Cat"] = webmodule.Title;   
}
@helper CreateMenubox(IEnumerable<WebModels.WebModule> nodes, string codecolor)
{
    foreach (var node in nodes)
    {
        <li>
            @if (string.IsNullOrEmpty(node.URL) || string.IsNullOrWhiteSpace(node.URL))
            {
                @Html.ActionLink(node.Title, "Index", "Home", new { metatitle = node.MetaTitle != null ? node.MetaTitle : "web", area = "" }, new { title = node.Title, style = "color:" + codecolor })
            }
            else
            {
                <a href="@node.URL" target="@node.Target" style="color:@codecolor">@node.Title</a>
            }
        </li>
    }
}
<div class="box-new">   
    <div class="news-details">
        <div id="fb-root"></div>
        <script>
            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/vi_VN/all.js#xfbml=1";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));</script>
        @Html.Raw(HttpUtility.HtmlDecode(item.Body))       
        <div class="clearfix"></div>
        <div class="fb-like" data-href="@url" data-layout="standard" data-action="like" data-show-faces="true" data-share="true" data-width="645"></div>
        <h2>@item.Description</h2>
        <p class="date">Đăng ngày : @item.CreatedDate.Value.ToShortDateString()</p>
        <hr />
        <ul class="cat">
            <li><a href="@urlcat">@webmodule.Title</a></li>
            @{
                var sub = WEB.Areas.ContentType.Controllers.ArticleController.GetWebModuleByParentID(webmodule.ID);
            }
            @if (sub.Any())
            {
                @CreateMenubox(sub, codecolor);
            }
        </ul>
        <div class="clear-fix"></div>
        <hr />
        @Html.Action("_OtherNews", new { id = Model.ID })

    </div>
</div>
<style>
    .news-details h1,#related-link-container li a,.other-news ul li a{
        color:@codecolor !important;
    }
    #related-link-container{
        background-color: @bgColor !important;
    }

    .box-new-nav1 li a:before{
        background:@codecolor !important;
    }

</style>
